name: Operator Analysis & GitHub Pages Deployment

on:
  push:
    branches: [ main ]
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: read
  pages: write
#  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  analyze:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for accurate git log analysis
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyyaml
    
    - name: Run operator analysis
      run: |
        echo "🔍 Starting operator analysis..."
        python3 analysis/analyze_operators.py --format json --output operator_analysis.json
        python3 analysis/analyze_operators.py --format csv --output operator_analysis.csv
        
        echo "📊 Generating HTML report..."
        python3 analysis/generate_html_report.py operator_analysis.json
        
        echo "📈 Analysis complete!"
        ls -la *.json *.csv *.html
    
    - name: Create GitHub Pages structure
      run: |
        mkdir -p docs
        
        # Copy HTML report as index.html for GitHub Pages
        cp operator_analysis_report.html docs/index.html
        
        # Copy data files for download
        cp operator_analysis.json docs/
        cp operator_analysis.csv docs/
        
        # Create a simple download page
        cat > docs/data.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
            <title>Certified Operators Analysis - Data Downloads</title>
            <style>
                body { font-family: Arial, sans-serif; margin: 40px; }
                .download-link { 
                    display: inline-block; 
                    margin: 10px; 
                    padding: 15px 25px; 
                    background: #007acc; 
                    color: white; 
                    text-decoration: none; 
                    border-radius: 5px; 
                }
                .download-link:hover { background: #005a9e; }
                .file-size { color: #666; font-size: 0.9em; }
            </style>
        </head>
        <body>
            <h1>📊 Certified Operators Analysis - Data Downloads</h1>
            <p>Download the latest analysis data in various formats:</p>
            
            <a href="operator_analysis.json" class="download-link">
                📄 JSON Data
                <div class="file-size">Complete analysis data</div>
            </a>
            
            <a href="operator_analysis.csv" class="download-link">
                📊 CSV Data
                <div class="file-size">Spreadsheet format</div>
            </a>
            
            <a href="index.html" class="download-link">
                🌐 HTML Report
                <div class="file-size">Interactive dashboard</div>
            </a>
            
            <hr style="margin: 40px 0;">
            <p><strong>Last updated:</strong> $(date -u)</p>
            <p><a href="https://github.com/redhat-openshift-ecosystem/certified-operators">← Back to Repository</a></p>
        </body>
        </html>
        EOF
        
        # Add navigation link to main report
        sed -i 's/<h1>🚀 Certified Operators Analysis Report<\/h1>/<h1>🚀 Certified Operators Analysis Report<\/h1>\n        <p style="text-align: center;"><a href="data.html" style="color: #3498db;">📥 Download Data Files<\/a><\/p>/' docs/index.html
        
        echo "📁 GitHub Pages structure created:"
        ls -la docs/
    
    - name: Upload GitHub Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./docs

  deploy:
    # Only run on main branch pushes and scheduled runs
    if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch')
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    runs-on: ubuntu-latest
    needs: analyze
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
    
    - name: Post deployment summary
      run: |
        echo "## 🚀 Deployment Successful!" >> $GITHUB_STEP_SUMMARY
        echo "📊 **Analysis Dashboard:** ${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY
        echo "📥 **Data Downloads:** ${{ steps.deployment.outputs.page_url }}data.html" >> $GITHUB_STEP_SUMMARY
        echo "⏰ **Updated:** $(date -u)" >> $GITHUB_STEP_SUMMARY
